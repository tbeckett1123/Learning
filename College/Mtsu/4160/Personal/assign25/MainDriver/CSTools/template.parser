%parser template.lexer
%namespace Template

program : cmd eol
		| cmd eol program
		| eol
		| cmd
		;

cmd : b
	  program
	| e
	  program	
	| c
	  program
	| d
	  program
	| i
	  program
	| p
	  program
	| g
	  program
	;

eol : EOL 
    | EOL eol
    ;

b : B name:s { MainDriver.MainTester.symTable.BeginScope(s.Type);		                  
			 }
  ;

c : C S name:s L name:n { if(MainDriver.MainTester.symTable.Contains(s.Type, n.Type)) 
						  {
							Console.Write(n.Type + " was found\n");
						  }
						  else
						  {
							Console.Write(n.Type + " was not found\n");
						  }
			 		    }
  | C L name:n			{ if(MainDriver.MainTester.symTable.Contains(
						  MainDriver.MainTester.symTable.returnScope(),
						  n.Type))
						  {
							Console.Write(n.Type + " was found\n");
						  }
						  else
						  {
							Console.Write(n.Type + " was not found\n");
						  }
						  
						}
  ;
  
d : D { MainDriver.MainTester.symTable.Dump(); 
      }
  ;
  
e : E { MainDriver.MainTester.symTable.EndScope();		
      }
  ;

i : I S name:s L name:n T name:t		  { try
											{				
												MainDriver.MainTester.symTable.Insert(s.Type, n.Type, t.Type, null);												
											}
											catch
											{
												Console.Write("The item is already in the table\n");
											}
                                          }	
  | I S name:s L name:n T name:t V name:v { try
											{
												if(!(t.Type.CompareTo("FltArr") == 0 || t.Type.CompareTo("IntArr") == 0 || t.Type.CompareTo("StrArr") == 0))
												{
													MainDriver.MainTester.symTable.Insert(s.Type, n.Type, t.Type, v.Type);
												}
												else
												{
													MainDriver.MainTester.symTable.Insert(s.Type, n.Type, t.Type, new string[Int32.Parse(v.Type)]);												
												}
											}
											catch
											{
												Console.Write("The item is already in the table\n");
											}   
                                          }
  ;
  
  
p : P S name:s L name:n T name:t V name:v  { try
											{
												MainDriver.MainTester.symTable.Put(s.Type, n.Type, t.Type, v.Type);
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }
  | P S name:s L name:n T name:t V name:v name:v1 
										  { try
											{
												MainDriver.MainTester.symTable.Put(s.Type, n.Type, t.Type, v1.Type, Int32.Parse(v.Type));
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										   }											  
  | P S name:s L name:n T name:t		 { try
											{
												MainDriver.MainTester.symTable.Put(s.Type, n.Type, t.Type, null);
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }
  | P S name:s L name:n V name:v		 { try
											{
												MainDriver.MainTester.symTable.Put(s.Type, n.Type, null, v.Type);
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }
  | P S name:s L name:n V name:v name:v1 { try
											{
												MainDriver.MainTester.symTable.Put(s.Type, n.Type, null, v1.Type, Int32.Parse(v.Type));
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }
										  
  | P L name:n T name:t V name:v		 { try
											{
												MainDriver.MainTester.symTable.Put(
												MainDriver.MainTester.symTable.returnScope(),
												n.Type, t.Type, v.Type);
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }

  | P L name:n T name:t V name:v name:v1 { try
											{
												MainDriver.MainTester.symTable.Put(
												MainDriver.MainTester.symTable.returnScope(),
												n.Type, t.Type, v1.Type, Int32.Parse(v.Type));
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }   


										     
  | P L name:n T name:t					 { try
											{
												MainDriver.MainTester.symTable.Put(
												MainDriver.MainTester.symTable.returnScope(),
												n.Type, t.Type, null);
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }   
  | P L name:n V name:v					 { try
											{
												MainDriver.MainTester.symTable.Put(
												MainDriver.MainTester.symTable.returnScope(),
												n.Type, null, v.Type);
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }   
  
  | P L name:n V name:v	name:v1			 { try
											{
												MainDriver.MainTester.symTable.Put(
												MainDriver.MainTester.symTable.returnScope(),
												n.Type, null, v1.Type, Int32.Parse(v.Type));
											}
											catch
											{
												Console.Write("The item is not in the table\n");
											}
										  }   

  
  | P L name:n							  //do nothing on these two cases.
  | P S name:s L name:n
  ;
  
g : G S name:g L name:l V				{ try
										  {
												object temp = MainDriver.MainTester.symTable.GetValue(g.Type, l.Type);
												
												Console.Write(temp.ToString() + "\n");
										  }
										  catch
										  {
												Console.Write("The item is not in the table\n");
										  }											
										}
  | G S name:g L name:l V name:v		{ try
										  {
												object temp = MainDriver.MainTester.symTable.GetValue(g.Type, l.Type, Int32.Parse(v.Type));
												
												Console.Write(temp.ToString() + "\n");
												
										  }
										  catch
										  {
												Console.Write("The item is not in the table\n");
										  }											
										}
  | G S name:g L name:l T				{ try
										  {
												SymbolTable.Bucket temp = MainDriver.MainTester.symTable.Get(g.Type, l.Type);
												
												Console.Write(temp.Scope + " " + temp.Lexeme + " " + temp.Type + " " + temp.Value + "\n");
										  }
										  catch
										  {
										  		Console.Write("The item is not in the table\n");
										  }
  
										}
  | G L name:l V						{ try
										  {
												object temp = MainDriver.MainTester.symTable.GetValue(
												MainDriver.MainTester.symTable.returnScope(),
												l.Type);
												
												Console.Write(temp.ToString() + "\n");
												
										  }
										  catch
										  {
												Console.Write("The item is not in the table\n");
										  }											
										}
  | G L name:l V name:v					{ try
										  {
												object temp = MainDriver.MainTester.symTable.GetValue(
												MainDriver.MainTester.symTable.returnScope(),
												l.Type, Int32.Parse(v.Type));
												
												Console.Write(temp.ToString() + "\n");
												
										  }
										  catch
										  {
												Console.Write("The item is not in the table\n");
										  }											
										}
  | G L name:l T						{ try
										  {
												SymbolTable.Bucket temp = MainDriver.MainTester.symTable.Get(
												MainDriver.MainTester.symTable.returnScope(),
												l.Type);
												
												Console.Write(temp.Scope + " " + temp.Lexeme + " " + temp.Type + " " + temp.Value + "\n");
										  }
										  catch
										  {
										  		Console.Write("The item is not in the table\n");
										  }
  
										}
  ;
  